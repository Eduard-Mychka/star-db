{"version":3,"sources":["components/Spinner/index.js","components/Spinner/Spinner.jsx","services/SwapiService.jsx","components/ItemList/ItemList.jsx","components/ErrorButton/index.js","components/ErrorButton/ErrorButton.jsx","components/PersonDetails/PersonDetails.jsx","components/ErrorIndicator/Giphy2.gif","components/ErrorIndicator/index.js","components/ErrorIndicator/ErrorIndicator.jsx","components/PeoplePage/index.js","components/PeoplePage/PeoplePage.jsx","components/Header/index.js","components/Header/Header.jsx","components/RandomPlanet/RandomPlanet.jsx","components/RandomPlanet/index.js","components/App/App.jsx","index.js"],"names":["Spinner","className","SwapiService","_apiBase","_transformPlanet","planet","id","_extractId","name","population","rotationPeriod","rotation_period","diameter","_transformStarship","starship","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","_transformPerson","person","gender","birth_year","eye_color","url","a","fetch","this","res","ok","Error","status","json","getResource","results","map","item","match","ItemList","swapiService","state","peopleList","getAllPeople","then","setState","arr","onClick","props","onItemSelected","items","renderItems","Component","ErrorButton","renderError","foo","bar","PersonDetails","updatePerson","prevProps","personId","getPerson","src","alt","ErrorIndicator","icon","PeoplePage","selectedPerson","hasError","componentDidCatch","error","info","onPersonSelected","Header","href","target","RandomPlanet","loading","componentWillUnmount","clearInterval","interval","onPlanetLoaded","onError","err","updatePlanet","Math","floor","random","getPlanet","catch","setInterval","hasData","errorMessage","spinner","content","PlanetView","App","showRandomPlanet","toggleRandomPlanet","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.875de29c.chunk.js","sourcesContent":["import Spinner from './Spinner';\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"lds-css\">\r\n      <div className=\"lds-double-ring\">\r\n        <div></div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","export default class SwapiService {\r\n\r\n  _apiBase = 'https://swapi.dev/api';\r\n\r\n  async getResource(url) {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}` +\r\n        `, received ${res.status}`)\r\n    }\r\n    return await res.json();\r\n  } \r\n\r\n  async getAllPeople() {\r\n    const res = await this.getResource(`/people/`);\r\n    return res.results.map(this._transformPerson);\r\n  }\r\n  async getPerson(id) {\r\n    const person = await this.getResource(`/people/${id}/`);\r\n    return this._transformPerson(person);\r\n  }\r\n\r\n\r\n  async getAllPlanets() {\r\n    const res = await this.getResource(`/planets/`);\r\n    return res.results.map(this._transformPlanet);\r\n  }\r\n  async getPlanet(id) {\r\n    const planet = await this.getResource(`/planets/${id}/`);\r\n    return this._transformPlanet(planet);\r\n  }\r\n\r\n\r\n  async getAllStarships() {\r\n    const res = await this.getResource(`/starships/`);\r\n    return res.results.map(this._transformStarship);\r\n  } \r\n  async getStarship(id) {\r\n    const starship = this.getResource(`/starships/${id}/`);\r\n    return this._transformStarship(starship);\r\n  }\r\n\r\n  _extractId(item) {\r\n    const idRegExp = /\\/([0-9]*)\\/$/;\r\n    return item.url.match(idRegExp)[1];\r\n  }\r\n\r\n  _transformPlanet = (planet) => {\r\n    return {\r\n      id: this._extractId(planet),\r\n      name: planet.name,\r\n      population: planet.population,\r\n      rotationPeriod: planet.rotation_period,\r\n      diameter: planet.diameter\r\n    };\r\n  };\r\n\r\n  _transformStarship = (starship) => {\r\n    return {\r\n      id: this._extractId(starship),\r\n      name: starship.name,\r\n      model: starship.model,\r\n      manufacturer: starship.manufacturer,\r\n      costInCredits: starship.costInCredits,\r\n      length: starship.length,\r\n      crew: starship.crew,\r\n      passengers: starship.passengers,\r\n      cargoCapacity: starship.cargoCapacity\r\n    };\r\n  };\r\n\r\n  _transformPerson = (person) => {\r\n    return {\r\n      id: this._extractId(person),\r\n      name: person.name,\r\n      gender: person.gender,\r\n      birth_year: person.birth_year,\r\n      eye_color: person.eye_color\r\n    };\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport Spinner from '../Spinner';\r\nimport SwapiService from '../../services/SwapiService'\r\nimport './ItemList.scss';\r\n\r\nexport default class ItemList extends Component {\r\n\r\n  swapiService = new SwapiService();\r\n\r\n  state = {\r\n    peopleList: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.swapiService.getAllPeople()\r\n      .then((peopleList) => {\r\n        this.setState({ \r\n        peopleList\r\n      });\r\n    });\r\n  };    \r\n\r\n  renderItems(arr) {\r\n    return arr.map(({id, name}) => {\r\n      return (\r\n        <li className=\"list-group-item\"\r\n            key={id}\r\n            onClick={() => this.props.onItemSelected(id)}>\r\n          {name}\r\n        </li>\r\n      );    \r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { peopleList } = this.state;\r\n\r\n    if (!peopleList) {\r\n      return <Spinner />;\r\n    }\r\n\r\n    const items = this.renderItems(peopleList);\r\n\r\n    return (\r\n      <ul className=\"color-text item-list list-group\">\r\n        {items}\r\n      </ul>\r\n    );\r\n  };\r\n};\r\n","import ErrorButton from './ErrorButton';\n\nexport default ErrorButton;\n","import React, { Component } from 'react';\n\nimport './ErrorButton.scss';\n\nexport default class ErrorButton extends Component {\n\n  state = {\n    renderError: false\n  };\n\n  render() {\n    if (this.state.renderError) {\n      this.foo.bar = 0;\n    }\n\n    return (\n      <button\n        className=\"toggle-planet btn btn-danger btn-md\"\n        onClick={() => this.setState({renderError: true})}>\n        Throw Error\n      </button>\n    );\n  }\n}\n","import React, { Component } from 'react';\r\nimport SwapiService from '../../services/SwapiService'\r\nimport ErrorButton from '../ErrorButton';\r\n\r\n\r\nimport './PersonDetails.scss';\r\n\r\nexport default class PersonDetails extends Component {\r\n\r\n  swapiService = new SwapiService();\r\n\r\n  state = {\r\n    person: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updatePerson();\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.personId !== prevProps.personId) {\r\n      this.updatePerson()\r\n    };\r\n  };\r\n\r\n  updatePerson() {\r\n    const { personId } = this.props;\r\n    if (!personId) {\r\n      return;\r\n    }\r\n\r\n    this.swapiService\r\n      .getPerson(personId)\r\n      .then((person) => {\r\n        this.setState({ person });\r\n      });\r\n  };\r\n\r\n  render() {\r\n\r\n    const { person } = this.state;\r\n    if (!person) {\r\n      return <span>Select a person from a list</span>;\r\n    }\r\n\r\n    const { id, name, gender, birth_year, eye_color } = person;\r\n\r\n    return (\r\n      <div className=\"person-details card\">\r\n        <img className=\"person-image\"\r\n          src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`}\r\n          alt=\"character\"\r\n        />\r\n\r\n        <div className=\"card-body\">\r\n          <h4 className=\"color-text\">{name}</h4>\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Gender\r\n              <span className='color-text'> -</span></span>\r\n              <span>{gender}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Birth Year\r\n              <span className='color-text'> -</span></span>\r\n              <span>{birth_year}</span>\r\n            </li>\r\n            <li className=\"list-group-item\">\r\n              <span className=\"term\">Eye Color\r\n              <span className='color-text'> -</span></span>\r\n              <span>{eye_color}</span>\r\n            </li>\r\n          </ul>\r\n          <ErrorButton/>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\n","export default __webpack_public_path__ + \"static/media/Giphy2.13e3a66c.gif\";","import ErrorIndicator from \"./ErrorIndicator\";\r\n\r\nexport default ErrorIndicator;","import React from 'react'\r\nimport './ErrorIndicator.scss'\r\nimport icon from './Giphy2.gif';\r\n\r\nconst ErrorIndicator = () => {\r\n  return (\r\n    <div className=\"error-indicator\">\r\n      <img src={icon} alt=\"error icon\"/>\r\n      <span className=\"boom\">BOOM!</span>\r\n      <span>\r\n        something has gone terribly wrong\r\n      </span>\r\n      <span>\r\n        (but we already sent droids to fix it)\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import PeoplePage from './PeoplePage';\n\nexport default PeoplePage;\n","import React, { Component } from 'react';\n\nimport ItemList from '../ItemList/ItemList';\nimport PersonDetails from '../PersonDetails/PersonDetails';\nimport ErrorIndicator from '../ErrorIndicator';\n\nimport './PeoplePage.scss';\nimport SwapiService from \"../../services/SwapiService\";\n\nexport default class PeoplePage extends Component {\n\n  swapiService = new SwapiService();\n\n  state = {\n    selectedPerson: 5,\n    hasError: false\n  };\n\n  componentDidCatch = (error, info) => {\n    this.setState({hasError: true});\n  }\n\n  onPersonSelected = (selectedPerson) => {\n    this.setState({ selectedPerson });\n  };\n\n  render() {\n    if (this.state.hasError) return <ErrorIndicator />;\n    \n    return (\n      <div className=\"row mb2\">\n        <div className=\"col-md-6\">\n          <ItemList onItemSelected={this.onPersonSelected} />\n        </div>\n        <div className=\"col-md-6\">\n          <PersonDetails personId={this.state.selectedPerson} />\n        </div>\n      </div>\n    );\n  }\n}\n","import Header from './Header';\r\n\r\nexport default Header;","import './Header.scss';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header d-flex\">\r\n      <h3><a href=\"https://www.starwars.com/\" target=\"blank\">Star DB</a></h3>\r\n      <ul className=\"d-flex\">\r\n        <li><a href=\"2\">People</a></li>\r\n        <li><a href=\"2\">Planets</a></li>\r\n        <li><a href=\"2\">Starships</a></li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport SwapiService from '../../services/SwapiService';\r\nimport ErrorIndicator from '../ErrorIndicator';\r\nimport Spinner from '../Spinner';\r\nimport './RandomPlanet.scss';\r\n\r\nexport default class RandomPlanet extends Component {\r\n\r\n  swapiService = new SwapiService();\r\n  \r\n  state = {\r\n    planet: {},\r\n    loading: true,\r\n  };\r\n\r\n  componentDidMount() {   \r\n    this.updatePlanet();\r\n    this.interval = setInterval(this.updatePlanet, 10000); \r\n  }\r\n\r\n  componentWillUnmount = () => clearInterval(this.interval);\r\n\r\n  onPlanetLoaded = (planet) => {\r\n    this.setState({ \r\n      planet, \r\n      loading: false,\r\n      error: false\r\n    });\r\n  }; \r\n\r\n  onError = (err) => {\r\n    this.setState({\r\n      error: true,\r\n      loading: false,\r\n      \r\n    });\r\n  };\r\n\r\n  updatePlanet = () => {\r\n    const id = Math.floor(Math.random()*17) +2;\r\n    this.swapiService\r\n      .getPlanet(id)\r\n      .then(this.onPlanetLoaded)\r\n      .catch(this.onError);\r\n  };\r\n\r\n  render() { \r\n    const { planet, loading, error } = this.state;\r\n\r\n    const hasData = !(loading || error)\r\n\r\n    const errorMessage = error ? <ErrorIndicator /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const content = hasData ? <PlanetView planet={planet} /> : null;\r\n\r\n    return (\r\n      <div className=\"random-planet jumbotron\">\r\n        { errorMessage }\r\n        { spinner }\r\n        { content }\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nconst PlanetView = ({ planet }) => {\r\n  const { id, name, population, rotationPeriod, diameter } = planet; \r\n\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <img className=\"planet-image\" \r\n        src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} alt=\"planet\" \r\n      />\r\n      <div>\r\n        <h4 className=\"color-text\">{name}</h4>\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li className=\"list-group-item\">\r\n            <span className=\"term\">Population</span>\r\n            <span><span className=\"color-text\">- </span>{population}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span className=\"term\">Rotation Period</span>\r\n            <span><span className=\"color-text\">- </span>{rotationPeriod}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <span className=\"term\">Diameter</span>\r\n            <span><span className=\"color-text\">- </span>{diameter}</span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import RandomPlanet from './RandomPlanet';\r\n\r\nexport default RandomPlanet;\r\n","import React, { Component } from 'react';\r\n\r\nimport PeoplePage from '../PeoplePage';\r\nimport Header from '../Header';\r\nimport RandomPlanet from '../RandomPlanet';\r\nimport ErrorButton from '../ErrorButton';\r\n\r\nimport './App.scss';\r\n\r\nexport default class App extends Component {\r\n\r\n  state = {\r\n    showRandomPlanet: true,\r\n  };\r\n\r\n  toggleRandomPlanet = () => {\r\n    this.setState((state) => {\r\n      return {\r\n        showRandomPlanet: !state.showRandomPlanet\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n\r\n    const planet = this.state.showRandomPlanet \r\n    ? <RandomPlanet/> \r\n    : null;\r\n\r\n    return (\r\n      <div className=\"stardb-app\">\r\n        <Header />\r\n        { planet }\r\n        <div className=\"row mb2 button-row\">\r\n          <button\r\n            className=\"toggle-planet btn btn-danger btn-md\"\r\n            onClick={this.toggleRandomPlanet}>\r\n            Toggle Random Planet\r\n          </button>\r\n          <ErrorButton />\r\n        </div>\r\n        <PeoplePage />\r\n        <PeoplePage />\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App/App';\r\n\r\nReactDOM.render(<App />,\r\n  document.getElementById('root'));\r\n"],"sourceRoot":""}